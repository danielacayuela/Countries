{"ast":null,"code":"var _jsxFileName = \"/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Filters/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { iterateActivities } from '../Functions/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters({\n  onChange,\n  onClick\n}) {\n  _s();\n\n  //traigo countries para hacer los filtros \n  const countries = useSelector(state => state.countries); //Regions filter\n\n  let copyCountries = countries;\n  let regions = copyCountries.map(country => country.region); //quito valores repetidos\n\n  let filteredRegions = [...new Set(regions)]; //Los objetos Set son colecciones de valores. Se puede iterar sus elementos en el orden de su inserción. Un valor en un Set sólo puede estar una vez; éste es único en la colección Set.\n  //Activities\n\n  let activities = copyCountries.map(country => country.activities); //traigo un arreglo de objetos de las actividades con la funcion\n\n  let allActivities = iterateActivities(activities);\n  let activitiesName = allActivities.map(activity => activity.name);\n  let filteredActivities = [...new Set(activitiesName)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regionactivity\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"regions\",\n      id: \"regions\",\n      onChange: e => {\n        onChange(e.target.name, e.target.value);\n      },\n      onClick: e => {\n        onClick();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Check regions!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), filteredRegions.length > 0 ? filteredRegions.sort(function (a, b) {\n        return a > b ? 1 : -1;\n      }).map(region => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 36\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"activities\",\n      id: \"activities\",\n      onChange: e => {\n        onChange(e.target.name, e.target.value);\n      },\n      onClick: e => {\n        onClick();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Check activities!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), filteredActivities.length > 0 ? filteredActivities.sort(function (a, b) {\n        return a > b ? 1 : -1;\n      }).map(activity => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: activity,\n          children: activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filters, \"MYw2CSv8DD4gSKL3Tu+EVIQWVZI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Filters;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Filters/Filters.jsx"],"names":["React","useSelector","iterateActivities","Filters","onChange","onClick","countries","state","copyCountries","regions","map","country","region","filteredRegions","Set","activities","allActivities","activitiesName","activity","name","filteredActivities","e","target","value","length","sort","a","b"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {iterateActivities} from '../Functions/functions';\n\nexport default function Filters ({onChange,onClick}){\n//traigo countries para hacer los filtros \n   const countries = useSelector((state)=>state.countries);\n//Regions filter\n   let copyCountries =countries;\n   let regions = copyCountries.map((country)=>country.region);\n//quito valores repetidos\n   let filteredRegions= [...new Set(regions)]; \n//Los objetos Set son colecciones de valores. Se puede iterar sus elementos en el orden de su inserción. Un valor en un Set sólo puede estar una vez; éste es único en la colección Set.\n\n//Activities\n    let activities = copyCountries.map((country)=>country.activities);\n    //traigo un arreglo de objetos de las actividades con la funcion\n    let allActivities = iterateActivities(activities);\n    let activitiesName = allActivities.map((activity)=>activity.name);\n    let filteredActivities= [...new Set(activitiesName)]; \n\n    return ( \n        <div className='regionactivity'>\n            <select name=\"regions\" id=\"regions\" onChange={(e) => {onChange(e.target.name,e.target.value)}} onClick={(e) => {onClick()}}>\n                <option value=\"\">Check regions!</option>\n                {\n                    filteredRegions.length>0?\n                        filteredRegions.sort(function(a,b) {return a > b ? 1 : -1 }).map((region)=>{\n                            return <option value={region}>{region}</option>\n                            })\n                    : <p>No regions</p>\n                }\n            </select>\n            <select name=\"activities\" id=\"activities\" onChange={(e) => {onChange(e.target.name,e.target.value)}} onClick={(e) => {onClick()}}>\n                <option value=\"\">Check activities!</option>\n                {\n                    filteredActivities.length>0?\n                        filteredActivities.sort(function(a,b) {return a > b ? 1 : -1 }).map((activity)=>{\n                            return <option value={activity}>{activity}</option>\n                            })\n                        : <p>No regions</p>\n                }\n            </select>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}