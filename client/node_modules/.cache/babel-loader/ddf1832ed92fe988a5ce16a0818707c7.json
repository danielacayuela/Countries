{"ast":null,"code":"var _jsxFileName = \"/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Activity/Activity.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountries, postActivity } from '../../Actions/index';\nimport { getIds } from '../Functions/functions';\nimport { ActivityStyle } from './activityStyle.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Activity() {\n  _s();\n\n  //traigo los paises para tener la lista de opciones de paises\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n  const countries = useSelector(state => state.countries);\n  const [input, setInput] = useState({\n    name: '',\n    difficulty: 0,\n    time: 0,\n    season: '',\n    countries: []\n  }); //setear el estado dependiendo de las opciones seleccionadas\n\n  function handleChange(e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  ; //agrupar ids de los paises seleccionados, usando la funci√≥n getIds para hacerlo en un array\n\n  function handleIds(e) {\n    e.preventDefault();\n    let ids = e.target.options;\n    setInput({ ...input,\n      countries: getIds(ids)\n    });\n  }\n\n  ; //postear datos ingresados y resetear opciones\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    dispatch(postActivity(input));\n    setInput({ ...input,\n      name: '',\n      difficulty: 0,\n      time: 0,\n      season: ''\n    });\n    document.getElementById(\"miForm\").reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActivityStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"miForm\",\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's create new memories!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Type activity...\",\n          onChange: handleChange,\n          value: input.name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficulty\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"difficulty\",\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"difficulty\",\n          onChange: handleChange,\n          value: input.difficulty,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"time\",\n          children: \"Time(hours aprox.):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"time\",\n          onChange: handleChange,\n          value: input.time,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1 or less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), \"                            \", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"7\",\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"8\",\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"9\",\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10\",\n            children: \" 10 or more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"season\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"seasons\",\n          children: \"Season:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          id: \"seasons\",\n          name: \"season\",\n          onChange: handleChange,\n          value: input.season,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose season\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"autumn\",\n            children: \"Autumn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"spring\",\n            children: \"Spring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"summer\",\n            children: \"Summer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"winter\",\n            children: \"Winter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countriesname\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Countries:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          name: \"countries\",\n          id: \"countries\",\n          onChange: handleIds,\n          required: true,\n          children: countries.length > 0 ? countries.sort(function (a, b) {\n            return a.name > b.name ? 1 : -1;\n          }).map(country => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.id,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 40\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You can choose more than two countries by pressing Ctrl+options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Let the magic begin!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Activity, \"l4hOAGIjASZYMlXc5Ra0wdSbbns=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Activity;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Activity/Activity.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getCountries","postActivity","getIds","ActivityStyle","Activity","dispatch","countries","state","input","setInput","name","difficulty","time","season","handleChange","e","target","value","handleIds","preventDefault","ids","options","handleOnSubmit","document","getElementById","reset","length","sort","a","b","map","country","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport{getCountries, postActivity} from '../../Actions/index';\nimport {getIds} from '../Functions/functions';\nimport {ActivityStyle} from './activityStyle.jsx';\n\nexport default function Activity () {\n\n//traigo los paises para tener la lista de opciones de paises\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(getCountries());\n    },[dispatch]);\n\n    const countries = useSelector((state)=>state.countries);\n\n    const [input,setInput] = useState ({\n        name: '',\n        difficulty: 0,\n        time: 0,\n        season: '',\n        countries: []\n    });\n\n//setear el estado dependiendo de las opciones seleccionadas\n    function handleChange (e) {\n        setInput({...input,\n        [e.target.name] : e.target.value})\n    };\n\n//agrupar ids de los paises seleccionados, usando la funci√≥n getIds para hacerlo en un array\n    function handleIds (e) {\n        e.preventDefault();\n        let ids = e.target.options;\n            setInput({\n                ...input,\n                countries: getIds(ids)\n            });\n    };\n\n//postear datos ingresados y resetear opciones\n    function handleOnSubmit (e) {\n        e.preventDefault();\n        dispatch(postActivity(input));\n        setInput({...input,\n            name: '',\n            difficulty: 0,\n            time: 0,\n            season: '' })\n        document.getElementById(\"miForm\").reset();\n    }\n\n    return(\n        <ActivityStyle>\n            <form id=\"miForm\" onSubmit={handleOnSubmit}>\n                <h1>Let's create new memories!</h1>\n                <div className='name'>\n                    <label>Name:</label>\n                    <input type='text' name='name' placeholder='Type activity...' onChange={handleChange} value={input.name} required/>\n                </div>\n                <div className='difficulty'>\n                    <label for='difficulty'>Difficulty:</label>\n                    <select name=\"difficulty\" onChange={handleChange} value={input.difficulty} required>\n                        <option value=\"\">Choose difficulty</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                </div>\n                <div className='time'>\n                    <label for='time'>Time(hours aprox.):</label>\n                    <select name='time' onChange={handleChange} value={input.time} required>\n                        <option value=\"\">Choose time</option>\n                        <option value=\"1\">1 or less</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>                            <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>\n                        <option value=\"10\"> 10 or more</option>\n                    </select>\n                </div>\n                <div className='season'>\n                    <label for='seasons'>Season:</label>\n                    <select type='text' id=\"seasons\" name='season' onChange={handleChange} value={input.season} required>\n                        <option value=\"\">Choose season</option> \n                        <option value=\"autumn\">Autumn</option>\n                        <option value=\"spring\">Spring</option>\n                        <option value=\"summer\">Summer</option>\n                        <option value=\"winter\">Winter</option>\n                    </select>\n                </div>\n                <div className='countriesname'>\n                    <label>Countries:</label>\n                </div>\n                <div className='countries'>\n                    <select multiple name=\"countries\" id=\"countries\" onChange={handleIds} required >{\n                        countries.length>0?\n                            countries.sort(function(a,b) {return a.name > b.name ? 1 : -1 }).map((country)=>{\n                                return <option value={country.id}>{country.name}</option>\n                                })\n                            :<p>No options</p>\n                    }</select>\n                    <p>You can choose more than two countries by pressing Ctrl+options</p>\n                </div>\n                <button type='submit'>Let the magic begin!</button>\n            </form>\n        </ActivityStyle>\n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}