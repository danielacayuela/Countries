{"ast":null,"code":"var _jsxFileName = \"/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCountries, getCountriesByName } from '../../Actions/index';\nimport Country from '../Country/Country';\nimport Filters from '../Filters/Filters';\nimport Sort from '../Filters/Sort';\nimport SearchBar from '../SearchBar/SearchBar';\nimport { arrayPaisesPorActividad } from '../Functions/functions';\nimport { HomeStyle } from './homeStyle.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const countries = useSelector(state => state.countries);\n  const [cards, setCards] = useState([]);\n  const [name, setName] = useState('');\n  const [regions, setRegions] = useState('');\n  const [activities, setActivities] = useState('');\n  const [sort, setSort] = useState('');\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch(); //si tengo nombre en query traigo coincidencias, sino traigo todo los paises\n\n  useEffect(() => {\n    if (search) dispatch(getCountriesByName(search));else dispatch(getCountries());\n  }, [search]); //seteo las cartas con los paises que haya traido\n\n  useEffect(() => {\n    setCards(countries);\n  }, [countries]);\n  useEffect(() => {\n    let filtered = countries;\n\n    if (regions !== \"\") {\n      filtered = filtered.filter(country => country.region === regions);\n    }\n\n    ;\n\n    if (activities !== \"\") {\n      filtered = arrayPaisesPorActividad(filtered, \"activities\", \"name\", activities);\n    }\n\n    ;\n\n    if (sort) {\n      switch (sort) {\n        case \"asc\":\n          filtered = filtered.sort((a, b) => {\n            return a.name > b.name ? 1 : -1;\n          });\n          break;\n\n        case \"desc\":\n          filtered = filtered.sort((a, b) => {\n            return a.name < b.name ? 1 : -1;\n          });\n          break;\n\n        case \"LowerHigher\":\n          filtered = filtered.sort((a, b) => {\n            return a.population - b.population;\n          });\n          break;\n\n        case \"HigherLower\":\n          filtered = filtered.sort((a, b) => {\n            return b.population - a.population;\n          });\n          break;\n\n        default:\n          console.log('FINAL', filtered[0]);\n          break;\n      }\n\n      ;\n    }\n\n    ;\n    setCards([...filtered]);\n  }, [regions, activities, sort]);\n\n  function handleFilterChange(name, value) {\n    if (name === \"regions\") {\n      setRegions(value);\n    }\n\n    ;\n\n    if (name === \"activities\") {\n      setActivities(value);\n    }\n\n    ;\n  }\n\n  ;\n\n  function handlePageNext() {\n    let max = Math.ceil(cards.length / 10 - 1);\n\n    if (max < 0) {\n      max = 1;\n    }\n\n    ;\n\n    if (page < max) {\n      setPage(page + 1);\n    }\n\n    ;\n  }\n\n  ;\n\n  function handlePagePrev() {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(HomeStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onChange: value => {\n          setName(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSearch(name);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Sort, {\n          onChange: value => {\n            setSort(value);\n          },\n          onClick: e => {\n            setPage(0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Filters, {\n          onChange: handleFilterChange,\n          onClick: e => {\n            setPage(0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: cards.length > 0 ? cards.slice(page * 10, page * 10 + 10).map(country => {\n        return /*#__PURE__*/_jsxDEV(Country, {\n          country: country\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 32\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"btn\",\n        children: \"Sorry! No country found, but you have a lot of other options:) Search for another country or change your filter options.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"prev\",\n          onClick: handlePagePrev,\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: page + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"next\",\n          onClick: handlePageNext,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"0wxR0WyJ4Ml4hJyYCbImHZT4Pfo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielacayuelatovar/Desktop/PORTAFOLIO/Countries/client/src/Components/Home/Home.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","getCountries","getCountriesByName","Country","Filters","Sort","SearchBar","arrayPaisesPorActividad","HomeStyle","Home","countries","state","cards","setCards","name","setName","regions","setRegions","activities","setActivities","sort","setSort","page","setPage","search","setSearch","dispatch","filtered","filter","country","region","a","b","population","console","log","handleFilterChange","value","handlePageNext","max","Math","ceil","length","handlePagePrev","e","slice","map","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {getCountries, getCountriesByName} from '../../Actions/index';\nimport Country from '../Country/Country';\nimport Filters from '../Filters/Filters';\nimport Sort from '../Filters/Sort';\nimport SearchBar from '../SearchBar/SearchBar';\nimport {arrayPaisesPorActividad} from '../Functions/functions';\nimport {HomeStyle} from './homeStyle.jsx';\n\nexport function Home () {\n    \n    const countries = useSelector((state)=>state.countries);\n\n    const [cards,setCards] = useState([]);\n    const [name,setName] = useState('');\n    const [regions,setRegions]=useState('');\n    const [activities,setActivities]=useState('');\n    const [sort,setSort]=useState('');\n    const [page, setPage] =useState(0);\n    const [search,setSearch] = useState('');\n    \n    const dispatch = useDispatch();\n//si tengo nombre en query traigo coincidencias, sino traigo todo los paises\n     useEffect(() => {\n        if(search)dispatch(getCountriesByName(search));\n        else dispatch(getCountries());\n    },[search]);\n//seteo las cartas con los paises que haya traido\n    useEffect(()=>{\n        setCards(countries);\n    },[countries]);\n\n    useEffect(()=>{\n        let filtered=countries;\n        if(regions !== \"\") { \n            filtered=filtered.filter(country=> country.region === regions);\n           };\n        if(activities !== \"\") {\n            filtered=arrayPaisesPorActividad(filtered,\"activities\",\"name\",activities);\n            };\n        if(sort){\n            switch (sort) {\n                case \"asc\":\n                    filtered= filtered.sort((a, b) => {return a.name > b.name ? 1 : -1 });\n                    break;\n                case \"desc\":\n                    filtered= filtered.sort((a, b) => { return a.name < b.name ? 1 : -1 });\n                    break;\n                case \"LowerHigher\": \n                    filtered= filtered.sort((a, b) => { return a.population - b.population });\n                    break;\n                case \"HigherLower\":\n                    filtered= filtered.sort((a, b) => { return b.population - a.population });\n                    break;\n                default:\n                    console.log('FINAL', filtered[0]);\n                    break;\n            };\n        }; \n        setCards([...filtered]);\n    },[regions,activities,sort]);\n\n    function handleFilterChange (name,value){\n        if(name === \"regions\"){setRegions(value)};\n        if(name === \"activities\"){setActivities(value)};\n    };\n        \n    function handlePageNext (){\n        let max=Math.ceil(cards.length/10-1)\n        if(max<0) {max=1};\n        if(page<(max)) {setPage(page+1)};\n    };\n\n    function handlePagePrev () {\n        if(page>0) {setPage(page-1)};\n    };\n\n    return(\n        <HomeStyle>\n            <div className='searchbar'>\n                <SearchBar onChange={(value) => {setName(value)}}/>\n                <button onClick={()=> {setSearch(name)}}>Search</button>\n            </div>\n            <div classname='filters'>\n                <div>\n                        <Sort  onChange={(value) => {setSort(value)}} onClick={(e) => {setPage(0)}}/>\n                </div>\n                <div>\n                        <Filters  onChange={handleFilterChange} onClick={(e) => {setPage(0)}}/> \n                </div>\n            </div>\n            <div className='cards'>{\n                cards.length>0?\n                    cards.slice(page*10,page*10+10).map((country) => {\n                        return <Country country={country}  key={country.id}/>\n                    })\n                    :<p className='btn'>Sorry! No country found, but you have a lot of other options:) Search for another country or change your filter options.</p>\n            }</div>\n            <div>\n                <div className='pagination'>\n                    <button value=\"prev\" onClick={handlePagePrev}>prev</button>\n                    <button>{page+1}</button>\n                    <button value=\"next\" onClick={handlePageNext}>next</button>\n                </div>\n            </div>  \n        </HomeStyle>\n    );\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}